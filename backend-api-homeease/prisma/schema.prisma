// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int       @id @default(autoincrement())
  name           String
  email          String    @unique
  password       String
  role           String    @default("resident")
  phone          String?
  apartmentNumber String?
  dateOfBirth    DateTime?
  gender         String?
  address        String?
  moveInDate     DateTime?
  status         String    @default("active")
  invoices       Invoice[]
  requests       Request[]
  notifications  Notification[] @relation("UserNotifications")
}

model Invoice {
  id         Int      @id @default(autoincrement())
  amount     Float
  dueDate    DateTime
  isPaid     Boolean  @default(false)
  type       String
  createdAt  DateTime @default(now())
  paidAt     DateTime?
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
}

model Request {
  id          Int      @id @default(autoincrement())
  description String
  status      String   @default("pending")
  category    String?
  priority    String?  @default("medium")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
}

model Notification {
  id         Int      @id @default(autoincrement())
  title      String
  content    String
  createdAt  DateTime @default(now())
  userId     Int?
  user       User?    @relation("UserNotifications", fields: [userId], references: [id])
  target     String   // "all", "residentId", "group", etc.
}
